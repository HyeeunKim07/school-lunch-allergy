# -*- coding: utf-8 -*-
"""급식 웹스크롤링 .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LWhsPuGOmOOsbp-U7E-uMUmXi6dBU_9i
"""

import requests
from bs4 import BeautifulSoup

url = "https://search.naver.com/search.naver?where=nexearch&sm=tab_etc&mra=blBI&pkid=682&os=24931050&qvt=0&query=%EC%83%81%EC%82%B0%EA%B3%A0%EB%93%B1%ED%95%99%EA%B5%90%20%EA%B8%89%EC%8B%9D%EC%8B%9D%EB%8B%A8"
req = requests.get(url)

if req.status_code == 200:
    soup = BeautifulSoup(req.content, "html.parser")
    # 급식 정보가 있는 부분을 찾아서 가져옵니다
    급식정보 = soup.find_all('div', class_='timeline_box')

    # 급식 정보 출력
    for item in 급식정보:
        print(item.text)
else:
    print("Request failed with status code:", req.status_code)

import requests
from bs4 import BeautifulSoup

url = "https://search.naver.com/search.naver?where=nexearch&sm=tab_etc&mra=blBI&pkid=682&os=24931050&qvt=0&query=%EC%83%81%EC%82%B0%EA%B3%A0%EB%93%B1%ED%95%99%EA%B5%90%20%EA%B8%89%EC%8B%9D%EC%8B%9D%EB%8B%A8"
req = requests.get(url)

if req.status_code == 200:
    soup = BeautifulSoup(req.content, "html.parser")
    급식데이터 = soup.find_all('div', class_='timeline_box')

    # 데이터 추출 및 가공
    meals = [item.text for item in 급식데이터]

    # 데이터 구조화 (예: 리스트로 구조화)
    structured_data = {
        "meals": meals
    }

    # 데이터 저장 (예: 파일에 저장)
    with open('meal_data.txt', 'w') as file:
        for meal in meals:
            file.write(meal + '\n')

    print("Data saved successfully.")
else:
    print("Request failed with status code:", req.status_code)

# 파일 읽기
with open('meal_data.txt', 'r') as file:
    data = file.read()
    print(data)

import csv

# 주어진 데이터
data = [
    "단호박죽,누룽지",
    "모듬빵종,잼",
    "(1.2.5.6) 크랜베리멸치볶음",
    "(5.6.13) 부추스크램블에그",
    "스팸구이 (1.2.5.6.10.15)",
    "포기김치 (9.13)",
    "우리쌀링,초코크런치 (2.5.6)",
    "버터감자",
    "쇠고기무국 (5.6.16)",
    "감귤쥬스,우유",
    "사과,토마토"
]

# CSV 파일에 저장
file_path = 'meal_data.csv'
with open(file_path, 'w', newline='', encoding='utf-8') as file:
    writer = csv.writer(file)
    for item in data:
        writer.writerow([item])

print(f'Data saved to {file_path}')

